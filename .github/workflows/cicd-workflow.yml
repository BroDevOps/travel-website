# GitHub Action pipeline to build docker image and push to docker hub  JAVA
name: Docker Build and Push
on:
  push:
    branches:
      - main
      - stage
  pull_request:
    types: [opened, synchronize, reopened]
permissions:
  id-token: write
  contents: read
env:
  IMAGE_NAME: flash-gmail
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
 
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin' # Alternative distribution options are available.
 
      - name: Cache GmailMaven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Configure AWS Credentials with Stage for codeartifact
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubRole
          aws-region: ap-south-1
 
      - name: Get Codeartifact Token
        run: echo "CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain flash --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} --query authorizationToken --output text`" >> "$GITHUB_ENV"
 
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots -s settings.xml verify
      - name: Set AWS_ACCOUNT_ID
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "${{ github.event.pull_request.merged }}"
          echo "${{ github.event_name }}"
          echo "${{ github.ref }}"
          echo "Merged PR into main, pushing to prod account ECR"
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID_PROD }}" >> $GITHUB_ENV
          else
          echo "${{ github.event.pull_request.merged }}"
          echo "${{ github.event_name }}"
          echo "${{ github.ref }}"
          echo "Pushing to stage account ECR"
          echo "AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi
      - name: Configure AWS Credentials for the necessary environment
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/GithubRole
          aws-region: ap-south-1
 
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
 
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          platforms: linux/arm64
          context: .
          push: true
          tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.ap-south-1.amazonaws.com/${{ env.IMAGE_NAME }}:${{ github.sha }}
