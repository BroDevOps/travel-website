name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get remove -y containerd.io  # Remove conflicting package
          sudo apt-get -y install docker.io
          sudo docker --version

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo -e "[default]\naws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}\nregion=${{ secrets.AWS_REGION }}" > ~/.aws/config

      - name: Build Docker image
        run: |
          docker build -t 402639326195.dkr.ecr.ap-south-1.amazonaws.com/test:latest .

      - name: Push Docker image to ECR
        run: |
          docker push 402639326195.dkr.ecr.ap-south-1.amazonaws.com/test:latest

  deploy:
    runs-on: ubuntu-latest

    needs: build-and-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.aws
          echo -e "[default]\naws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}\nregion=${{ secrets.AWS_REGION }}" > ~/.aws/config

      - name: Download Docker image
        run: |
          docker pull 402639326195.dkr.ecr.ap-south-1.amazonaws.com/test:latest

      - name: Stop and remove existing container
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.PEM_FILE }} ubuntu@ec2-3-6-38-239.ap-south-1.compute.amazonaws.com "docker stop travel-container-fe && docker rm travel-container-fe"

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.PEM_FILE }} ubuntu@ec2-3-6-38-239.ap-south-1.compute.amazonaws.com "docker run -d -p 3000:3000 --restart always 402639326195.dkr.ecr.ap-south-1.amazonaws.com/test:latest"
